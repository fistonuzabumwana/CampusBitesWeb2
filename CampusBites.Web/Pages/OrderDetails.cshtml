@page "{id:int}"
@model CampusBites.Web.Pages.OrderDetailsModel
@{
    ViewData["Title"] = $"Order Details - {Model.Order?.Id}";
    var cultureInfo = new System.Globalization.CultureInfo("fr-RW");
}

<div class="order-details-container animate__animated animate__fadeIn">
    @if (Model.Order == null)
    {
        <div class="alert alert-glass alert-warning animate__animated animate__shakeX" role="alert">
            <div class="d-flex align-items-center">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                <div>
                    The requested order could not be found or you don't have permission to view it.
                    <a asp-page="/MyOrders" class="alert-link">Return to Order History</a>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-between align-items-center mb-5">
            <div>
                <h3 class="display-5 fw-bold text-gradient mb-1">Order Details</h3>
                <p class="text-muted">Order #@Model.Order.Id • @Model.Order.OrderDate.ToString("f", cultureInfo)</p>
            </div>
            <a asp-page="/MyOrders" class="btn btn-outline-secondary btn-icon">
                <i class="bi bi-arrow-left"></i> Back
            </a>
        </div>

        <div class="row g-4">
            <!-- Order Summary Card -->
            <div class="col-lg-4">
                <div class="card glass-card h-100">
                    <div class="card-header glass-header">
                        <h5 class="mb-0"><i class="bi bi-receipt me-2"></i>Order Summary</h5>
                    </div>
                    <div class="card-body">
                        <div class="order-meta-item">
                            <span class="meta-label">Status</span>
                            <span class="status-badge @GetStatusClass(Model.Order.Status.ToString())">
                                @Model.Order.Status
                            </span>
                        </div>
                        <div class="order-meta-item">
                            <span class="meta-label">Total Amount</span>
                            <span class="meta-value fw-bold">@Model.Order.OrderTotal.ToString("C", cultureInfo)</span>
                        </div>
                        <div class="order-meta-item">
                            <span class="meta-label">Payment Method</span>
                            <span class="meta-value">@Model.Order.PaymentMethod</span>
                        </div>
                        <div class="order-meta-item">
                            <span class="meta-label">Payment Reference</span>
                            <span class="meta-value">@Model.Order.PaymentReference</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Address Cards -->
            <div class="col-lg-4">
                <div class="card glass-card h-100">
                    <div class="card-header glass-header">
                        <h5 class="mb-0"><i class="bi bi-truck me-2"></i>Shipping Address</h5>
                    </div>
                    <div class="card-body">
                        <address class="address-card">
                            <div class="address-line">@Model.Order.ShippingAddress.StreetAddress</div>
                            <div class="address-line">@Model.Order.ShippingAddress.Sector</div>
                            <div class="address-line">@Model.Order.ShippingAddress.District</div>
                        </address>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card glass-card h-100">
                    <div class="card-header glass-header">
                        <h5 class="mb-0"><i class="bi bi-credit-card me-2"></i>Billing Address</h5>
                    </div>
                    <div class="card-body">
                        <address class="address-card">
                            <div class="address-line">@Model.Order.BillingAddress.StreetAddress</div>
                            <div class="address-line">@Model.Order.BillingAddress.Sector</div>
                            <div class="address-line">@Model.Order.BillingAddress.District</div>
                        </address>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Items Table -->
        <div class="card glass-card mt-4">
            <div class="card-header glass-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="bi bi-basket me-2"></i>Order Items</h5>
                <span class="badge bg-primary-light text-primary rounded-pill">
                    @Model.Order.OrderItems.Count @(Model.Order.OrderItems.Count == 1 ? "item" : "items")
                </span>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="glass-header">
                            <tr>
                                <th class="ps-4">Item</th>
                                <th class="text-center">Quantity</th>
                                <th class="text-end">Unit Price</th>
                                <th class="text-end pe-4">Subtotal</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Order.OrderItems)
                            {
                                <tr class="animate__animated animate__fadeInUp" style="--animate-order: @(Model.Order.OrderItems.IndexOf(item) + 1)">
                                    <td class="ps-4 fw-medium">@item.MenuItemName</td>
                                    <td class="text-center">
                                        <span class="badge bg-primary-light text-primary rounded-pill px-3 py-1">
                                            @item.Quantity
                                        </span>
                                    </td>
                                    <td class="text-end">@item.Price.ToString("C", cultureInfo)</td>
                                    <td class="text-end pe-4 fw-bold">@item.Subtotal.ToString("C", cultureInfo)</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr class="order-total-row">
                                <td colspan="3" class="text-end fw-bold ps-4">Total</td>
                                <td class="text-end pe-4 fw-bold">@Model.Order.OrderTotal.ToString("C", cultureInfo)</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-end mt-4">
            <a asp-page="/MyOrders" class="btn btn-outline-secondary me-2">
                <i class="bi bi-arrow-left me-2"></i>Back to Orders
            </a>
            <button class="btn btn-primary btn-hover-glow" data-bs-toggle="modal" data-bs-target="#reorderModal">
                <i class="bi bi-arrow-repeat me-2"></i>Reorder
            </button>
        </div>

        <!-- Reorder Modal -->
        <div class="modal fade" id="reorderModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content glass-card">
                    <div class="modal-header glass-header">
                        <h5 class="modal-title">Reorder Items</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Would you like to add all items from this order to your cart?</p>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="clearCartCheck" checked>
                            <label class="form-check-label" for="clearCartCheck">
                                Clear current cart items first
                            </label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="confirmReorder">Confirm Reorder</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@functions {
    string GetStatusClass(string status)
    {
        return status switch
        {
            "Completed" => "bg-success-light text-success",
            "Processing" => "bg-warning-light text-warning",
            "Cancelled" => "bg-danger-light text-danger",
            "Delivered" => "bg-info-light text-info",
            _ => "bg-secondary-light text-secondary"
        };
    }
}



@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Reorder functionality
            const confirmReorderBtn = document.getElementById('confirmReorder');
            if (confirmReorderBtn) {
                confirmReorderBtn.addEventListener('click', function() {
                    const clearCart = document.getElementById('clearCartCheck').checked;

                    // Show loading state
                    this.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Processing...';
                    this.disabled = true;

                    // Simulate API call (replace with actual fetch)
                    setTimeout(() => {
                        // Show success message
                        const modal = bootstrap.Modal.getInstance(document.getElementById('reorderModal'));
                        modal.hide();

                        // Show toast notification
                        showToast('Items added to your cart!', 'success');

                        // Reset button
                        this.innerHTML = '<i class="bi bi-arrow-repeat me-2"></i>Confirm Reorder';
                        this.disabled = false;
                    }, 1500);
                });
            }

            function showToast(message, type) {
                // Implement toast notification
                console.log(`${type}: ${message}`);
                // You can use Bootstrap toasts or a custom notification here
            }
        });
    </script>
}